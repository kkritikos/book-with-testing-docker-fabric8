<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>gr.aegean</groupId>
    <artifactId>book</artifactId>
    <version>0.1</version>
  </parent>
  <artifactId>book-functional-tests</artifactId>
  <name>Book REST API Functional Tests</name>

  <dependencies>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>5.7.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <version>5.7.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-suite-api</artifactId>
      <version>1.7.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-runner</artifactId>
      <version>1.7.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>rest-assured</artifactId>
      <version>4.3.3</version>
      <scope>test</scope>
	</dependency>
	<!-- https://mvnrepository.com/artifact/com.google.code.gson/gson -->
	<dependency>
	    <groupId>com.google.code.gson</groupId>
	    <artifactId>gson</artifactId>
	    <version>2.8.6</version>
	</dependency>
	
	<dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>book-domain</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>2.22.2</version>
        <executions>
          <execution>
            <id>perform-it</id>
            <goals>
              <goal>integration-test</goal>
            </goals>
          </execution>
          <execution>
            <id>verify-it</id>
            <goals>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
         <groupId>io.fabric8</groupId>
         <artifactId>docker-maven-plugin</artifactId>
         <version>0.35.0</version>
         <executions>
             <execution>
                 <id>start</id>
                 <phase>pre-integration-test</phase>
                 <goals>
                     <goal>build</goal>
                     <goal>start</goal>
                 </goals>
             </execution>
             <execution>
                 <id>stop</id>
                 <phase>post-integration-test</phase>
                 <goals>
                     <goal>stop</goal>
                 </goals>
             </execution>
         </executions>
 
 
         <configuration>
         	<autoCreateCustomNetworks>true</autoCreateCustomNetworks>
         	<startParallel></startParallel>
             <images>
                 <image>
                 	<name>mysql:0.1</name>
                 	<alias>mysql</alias>
	                     <build>
	                     	<dockerFile>${project.basedir}/Dockerfile_mysql</dockerFile >
	                     </build>
	                     <run>
	                     	<!--  <ports>
                                 <port>3306:3306</port>
                             </ports> -->
	                     	<wait> 
          						<time>20000</time>
        					</wait>
	                     	<network>
   								 <mode>custom</mode>
   								<name>my-network</name>
   								<alias>mysql</alias>
							</network>
	                     </run>
                     </image>
                     <image>
                 	<name>tomcat:0.1</name>
                 	<alias>tomcat</alias>
                     <build>
                     	<dockerFile>${project.basedir}/Dockerfile</dockerFile>
                     	<contextDir>${project.basedir}/../book-rest</contextDir>
                     </build>
                         <run>
                             <ports>
                                 <port>8080:8080</port>
                             </ports>
                             <wait>
                             <!-- Check for this URL to return a 200 return code .... -->
	                             <time>40000</time>
	                             <!-- <http>
	                             	<url>http://localhost:8080/book</url>
	                             	<status>200</status>
	                             </http>  -->
                             </wait>
                             <network>
   								 <mode>custom</mode>
   								<name>my-network</name>
   								<alias>tomcat</alias>
							</network>
							<dependsOn>
      							<container>mysql</container>
    						</dependsOn>     
                         </run>
                 </image>
                 </images>
             </configuration>
         </plugin>
    </plugins>
   </build>
  </project>
